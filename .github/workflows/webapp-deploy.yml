name: Azure Web App Deploy

on:
  push:
    branches:
    - main
    paths:
    - src/webapp/**
  pull_request:
    paths:
    - src/webapp/**
    types:
    - opened
    - synchronize
    - reopened
  workflow_dispatch:
    inputs:
      azure_resource_group:
        description: Azure Resource Group name
        default: ''
        type: string
      azure_webapp_name:
        description: Azure Web app name
        default: ''
        type: string
      is_production:
        description: Enable to deploy to production
        default: false
        type: boolean

env:
  DOTNET_VERSION: '6.0.x'
  AZURE_WEBAPP_ARCHIVED_APP_NAME: .net-app

jobs:
  build:
    runs-on: windows-latest
    env:
      WORKING_DIR: src/webapp
      AZURE_WEBAPP_PACKAGE_PATH: ${{ github.workspace }}/outputs
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core SDK ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore packages from cache
      uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    # Run dotnet build and publish
    - name: dotnet build and publish
      run: |
        dotnet restore
        dotnet build --configuration Release
        dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'
      working-directory: ${{ env.WORKING_DIR }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.AZURE_WEBAPP_ARCHIVED_APP_NAME }}
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  # test:
  #   needs:
  #     - build
  #   runs-on: windows-latest

  deploy-to-staging:
    name: Deploy to staging
    needs:
      - build
      # - test
    runs-on: windows-latest
    env:
      AZURE_RESOURCE_GROUP: ${{ github.event.inputs.azure_resource_group || secrets.AZURE_RESOURCE_GROUP }}
      AZURE_WEBAPP_NAME: ${{ github.event.inputs.azure_webapp_name || secrets.AZURE_WEBAPP_NAME }}
      SLOT_NAME: staging
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.AZURE_WEBAPP_ARCHIVED_APP_NAME }}

      # Login
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy to Azure Web apps staging slot
      - name: 'Deploy to staging'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: .  # Indicate the directory includes downloaded artifacts
          slot-name: ${{ env.SLOT_NAME }}

  deploy-to-production:
    name: Deploy to production
    environment:
      - webapp_production
    needs:
      - deploy-to-staging
    runs-on: windows-latest
    if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event.inputs.is_production }}
    steps:
      # Login
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Swap slot to production when the updates are merged to the main branch
      - name: 'Swap slot from staging'
        environment:
        run: az webapp deployment slot swap --slot ${{ env.SLOT_NAME }} --name "${{ env.AZURE_WEBAPP_NAME }}" --resource-group "${{ env.AZURE_RESOURCE_GROUP }}"
