name: Azure Web App Deploy

on:
  push:
    branches:
    - main
    paths:
    - src/webapp/**
  pull_request:
    paths:
    - src/webapp/**
    types:
    - opened
    - synchronize
    - reopened
  workflow_dispatch:
    inputs:
      azure_resource_group:
        description: Azure Resource Group name
        default: ''
        type: string
      azure_webapp_name:
        description: Azure Web app name
        default: ''
        type: string

env:
  DOTNET_VERSION: '6.0.x'
  RESOURCE_GROUP: ${{ github.event.inputs.azure_resource_group || secrets.AZURE_RESOURCE_GROUP }}
  AZURE_WEBAPP_NAME: ${{ github.event.inputs.azure_webapp_name || secrets.AZURE_WEBAPP_NAME }}

jobs:
  build-and-deploy:
    runs-on: windows-latest
    env:
      WORKING_DIR: src/webapp
      AZURE_WEBAPP_PACKAGE_PATH: ${{ github.workspace }}/outputs
    steps:
    - run: |
        echo $CONTEXT | jq
        echo $INPUTS | jq
      env:
        CONTEXT: ${{ toJSON(github) }}
        INPUTS: ${{ toJSON(github.event.inputs) }}
      shell: bash

    - uses: actions/checkout@v2
    - name: Setup .NET Core SDK ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    # Run dotnet build and publish
    - name: dotnet build and publish
      run: |
        dotnet restore
        dotnet build --configuration Release
        dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'
      working-directory: ${{ env.WORKING_DIR }}

    # Login
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    # Deploy to Azure Web apps staging slot
    - name: 'Deploy to staging'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
        package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'
        slot-name: staging

    # Swap
    - name: 'Swap slot from staging'
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      run: az webapp deployment slot swap --slot staging --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }}
