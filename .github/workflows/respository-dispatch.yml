name: Receive repository dispatch event

on:
  repository_dispatch:
    types:
      - create-pull-request

env:
  PULL_REQUEST_LABEL: auto-generate
  PULL_REQUEST_BRANCH_PREFIX: auto-generated/

jobs:
  original_release_tag:
    name: Get original release tag
    runs-on: ubuntu-latest
    outputs:
      RELEASE_TAG: ${{ steps.release_tag.outputs.result }}
    steps:
      - name: Check client_payload
        if: ${{ ! (github.event.client_payload.origin_ref && contains(github.event.client_payload.origin_ref, 'refs/tags/')) }}
        run: |
          echo '::error::Invalid event request'
          exit 1

      - uses: actions/github-script@v2
        id: release_tag
        with:
          result-encoding: string
          script: |
            const { origin_ref } = context.payload.client_payload
            const words = origin_ref.split('/')
            return words[2]

  next_release_version:
    name: Calculate the next release version
    runs-on: ubuntu-latest
    outputs:
      NEXT_VERSION: ${{ steps.next_release_version.outputs.next-version }}
    steps:
      # If no release yet, this step fails as "HttpError: Not Found"
      - name: Get latest release
        id: get-latest-release
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            const ownerAndRepoName = context.payload.repository.full_name.split('/');
            const owner = ownerAndRepoName[0];
            const repo = ownerAndRepoName[1];
            const res = await github.repos.getLatestRelease({
              owner,
              repo,
            });
            console.log(res);
            let { tag_name } = res.data;
            const index = tag_name.indexOf('v');
            if (0 <= index) {
              tag_name = tag_name.slice(index + 1);
            }
            return tag_name

      - name: Calculate next release version
        id: next_release_version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.get-latest-release.outputs.result }}
          version-fragment: 'feature'

      - name: Show next release version
        run: |
          echo ${{ steps.next_release_version.outputs.next-version }}

  create_pull_request:
    name: Create pull request
    needs:
      - original_release_tag
      - next_release_version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create blank commit
        run: |
          git config user.name "Auto generator"
          git commit --allow-empty -m "Generated by release ${{ needs.original_release_tag.outputs.RELEASE_TAG }}"

      - name: Create pull request
        uses: peter-evans/create-pull-request@v3
        with:
          title: ${{ needs.next_release_version.outputs.NEXT_VERSION }}
          labels: ${{ env.PULL_REQUEST_LABEL }}
          branch: ${{ env.BRANCH_NAME }}
          delete-branch: true
        env:
          BRNACH_NAME: ${{ env.PULL_REQUEST_BRANCH_PREFIX }}${{ needs.next_release_version.outputs.NEXT_VERSION }}
