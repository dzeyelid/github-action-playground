name: Receive repository dispatch event

on:
  repository_dispatch:
    types:
      - create-pull-request

jobs:
  create-pull-request:
    runs-on: ubuntu-latest
    steps:
      - name: Show github context
        run: |
          echo $GITHUB_CONTEXT | jq
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      # If no release yet, this step fails as "HttpError: Not Found"
      - name: Get latest release
        id: get-latest-release
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const ownerAndRepoName = context.payload.repository.full_name.split('/');
            const owner = ownerAndRepoName[0];
            const repo = ownerAndRepoName[1];
            const res = github.repos.getLatestRelease({
              owner,
              repo,
            });
            console.log(res);
            let { tag_name } = res.data;
            const index = tag_name.indexOf('v');
            if (0 <= index) {
              tag_name = tag_name.slice(index + 1);
            }
            return tag_name

      - name: Show latest release
        run: |
          echo $RESULT | jq
        env:
          RESULT: ${{ steps.get-latest-release.outputs.result }}

      - name: Calculate next release version
        id: next-release-version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.get-latest-release.outputs.result }}
          version-fragment: 'feature'

      - name: Show next release version
        run: |
          echo ${{ steps.next-release-version.outputs.next-version }}
